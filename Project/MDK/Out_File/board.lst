C251 COMPILER V5.60.0,  board                                                              15/07/23  15:59:04  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE board
OBJECT MODULE PLACED IN .\Out_File\board.obj
COMPILER INVOKED BY: D:\Keil\C251\BIN\C251.EXE ..\..\Libraries\libraries\board.c XSMALL INTR2 WARNINGLEVEL(3) OPTIMIZE(0
                    -,SPEED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;.
                    -.\CODE;..\USER\inc;..\USER\src;..\CODE) DEBUG PRINT(.\Out_File\board.lst) OBJECT(.\Out_File\board.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2020,逐飞科技
    4           * All rights reserved.
    5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
    6           *
    7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9           *
   10           * @file                board
   11           * @company                     成都逐飞科技有限公司
   12           * @author              逐飞科技(QQ790875685)
   13           * @version             查看doc内version文件 版本说明
   14           * @Software            MDK FOR C251 V5.60
   15           * @Target core         STC32G12K128
   16           * @Taobao              https://seekfree.taobao.com/
   17           * @date                2020-4-14
   18           ********************************************************************************************************
             -************/
   19           
   20           
   21          #include "board.h"
   22          #include "zf_uart.h"
   23          #include "zf_tim.h"
   24          #include "zf_delay.h"
   25          
   26          //22.11MHz的IRC参数寄存器 0xFB
   27          //24MHz的IRC参数寄存器 0xFB
   28          #define IRC_22M (*((uint8  idata*)0xFA))
   29          #define IRC_24M (*((uint8  idata*)0xFB))
   30          
   31          
   32          //内核频率
   33          int32 sys_clk = FOSC;
   34          
   35          
   36          
   37          //-------------------------------------------------------------------------------------------------------
             -------------
   38          //  @brief      STC32G设置系统频率
   39          //  @param      NULL            空值
   40          //  @return     void            系统频率
   41          //  Sample usage:               
   42          //-------------------------------------------------------------------------------------------------------
             -------------
   43          uint32 set_clk(void)
   44          {
   45   1              
   46   1              P_SW2 |= 0x80;
   47   1      
   48   1              if(sys_clk == 22118400)
   49   1              {
   50   2                      //选择 22.1184MHz
   51   2                      CLKDIV = 0x04;
   52   2                      IRTRIM = T22M_ADDR;
   53   2                      VRTRIM = VRT27M_ADDR;
C251 COMPILER V5.60.0,  board                                                              15/07/23  15:59:04  PAGE 2   

   54   2                      IRCBAND = 0x02;
   55   2                      CLKDIV = 0x00;
   56   2              }
   57   1              else if(sys_clk == 24000000)
   58   1              {
   59   2                      //选择 24MHz
   60   2                      CLKDIV = 0x04;
   61   2                      IRTRIM = T24M_ADDR;
   62   2                      VRTRIM = VRT27M_ADDR;
   63   2                      IRCBAND = 0x02;
   64   2                      CLKDIV = 0x00;
   65   2              }
   66   1              else if(sys_clk == 27000000)
   67   1              {
   68   2                      //选择 27MHz
   69   2                      CLKDIV = 0x04;
   70   2                      IRTRIM = T27M_ADDR;
   71   2                      VRTRIM = VRT27M_ADDR;
   72   2                      IRCBAND = 0x02;
   73   2                      CLKDIV = 0x00;
   74   2              }
   75   1              else if(sys_clk == 30000000)
   76   1              {
   77   2              
   78   2                      //选择 30MHz
   79   2                      CLKDIV = 0x04;
   80   2                      IRTRIM = T30M_ADDR;
   81   2                      VRTRIM = VRT27M_ADDR;
   82   2                      IRCBAND = 0x02;
   83   2                      CLKDIV = 0x00;
   84   2              }
   85   1              else if(sys_clk == 33177600)
   86   1              {
   87   2                      //选择 33.1776MHz
   88   2                      CLKDIV = 0x04;
   89   2                      IRTRIM = T33M_ADDR;
   90   2                      VRTRIM = VRT27M_ADDR;
   91   2                      IRCBAND = 0x02;
   92   2                      CLKDIV = 0x00;
   93   2              }
   94   1              else if(sys_clk == 35000000)
   95   1              {
   96   2                      //选择 35MHz
   97   2                      CLKDIV = 0x04;
   98   2                      IRTRIM = T35M_ADDR;
   99   2                      VRTRIM = VRT44M_ADDR;
  100   2                      IRCBAND = 0x03;
  101   2                      CLKDIV = 0x00;
  102   2              }
  103   1              else
  104   1              {
  105   2                      sys_clk = 33177600;
  106   2                      //选择 33.1776MHz
  107   2                      CLKDIV = 0x04;
  108   2                      IRTRIM = T33M_ADDR;
  109   2                      VRTRIM = VRT27M_ADDR;
  110   2                      IRCBAND = 0x02;
  111   2                      CLKDIV = 0x00;
  112   2              }
  113   1      
  114   1              return sys_clk;
  115   1      }
  116          
  117          
  118          
  119          
C251 COMPILER V5.60.0,  board                                                              15/07/23  15:59:04  PAGE 3   

  120          
  121          void board_init(void)
  122          {
  123   1              EAXFR = 1;                              // 使能访问XFR
  124   1              CKCON = 0x00;                   // 设置外部数据总线为最快
  125   1              WTST = 0;               // 设置程序代码等待参数，赋值为0可将CPU执行程序的速度设置为最快
  126   1              SET_P54_RESRT;                  // 使P54为复位引脚
  127   1              P_SW2 = 0x80;                   // 开启特殊地址访问
  128   1      
  129   1      #if (1 == EXTERNAL_CRYSTA_ENABLE)
                       XOSCCR = 0xc0;                  //启动外部晶振
                       while (!(XOSCCR & 1));  //等待时钟稳定
                       CLKDIV = 0x00;                  //时钟不分频
                       CLKSEL = 0x01;                  //选择外部晶振
               #else
  135   1              //自动设置系统频率
  136   1              #if (0 == FOSC)
  137   1                      sys_clk = set_clk();
  138   1              #else
                               sys_clk = FOSC;
                       #endif
  141   1      #endif
  142   1      
  143   1              delay_init();                   // 延时函数初始化
  144   1              
  145   1              WTST = 0;
  146   1          P_SW2 |= 0x80;
  147   1          CLKDIV = 0;                         // 24MHz主频，分频设置
  148   1              
  149   1              P0M0 = 0x00;
  150   1              P0M1 = 0x00;
  151   1              P1M0 = 0x00;
  152   1              P1M1 = 0x00;
  153   1              P2M0 = 0x00;
  154   1              P2M1 = 0x00;
  155   1              P3M0 = 0x00;
  156   1              P3M1 = 0x00;
  157   1              P4M0 = 0x00;
  158   1              P4M1 = 0x00;
  159   1              P5M0 = 0x00;
  160   1              P5M1 = 0x00;
  161   1              P6M0 = 0x00;
  162   1              P6M1 = 0x00;
  163   1              P7M0 = 0x00;
  164   1              P7M1 = 0x00;
  165   1              
  166   1              ADCCFG = 0;
  167   1              AUXR = 0;
  168   1              SCON = 0;
  169   1              S2CON = 0;
  170   1              S3CON = 0;
  171   1              S4CON = 0;
  172   1              P_SW1 = 0;
  173   1              IE2 = 0;
  174   1              TMOD = 0;
  175   1      
  176   1              uart_init(DEBUG_UART, DEBUG_UART_RX_PIN, DEBUG_UART_TX_PIN, DEBUG_UART_BAUD, DEBUG_UART_TIM);
  177   1              EnableGlobalIRQ();
  178   1      }
  179          
  180          
  181          #if (1 == PRINTF_ENABLE)      //初始化调试串口
  182          //重定义printf 数字 只能输出uint16
  183          char putchar(char c)
  184          {
  185   1              uart_putchar(UART_1, c);//把自己实现的串口打印一字节数据的函数替换到这里
C251 COMPILER V5.60.0,  board                                                              15/07/23  15:59:04  PAGE 4   

  186   1      
  187   1              return c;
  188   1      }
  189          #endif
  190          
  191          void DisableGlobalIRQ(void)
  192          {
  193   1              EA = 0;
  194   1      }
  195          
  196          
  197          void EnableGlobalIRQ(void)
  198          {
  199   1              EA = 1;
  200   1      }
  201          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       695     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         5     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =         8     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
