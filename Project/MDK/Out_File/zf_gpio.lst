C251 COMPILER V5.60.0,  zf_gpio                                                            15/07/23  15:59:05  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE zf_gpio
OBJECT MODULE PLACED IN .\Out_File\zf_gpio.obj
COMPILER INVOKED BY: D:\Keil\C251\BIN\C251.EXE ..\..\Libraries\seekfree_libraries\zf_gpio.c XSMALL INTR2 WARNINGLEVEL(3)
                    - OPTIMIZE(0,SPEED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_p
                    -eripheral;..\CODE;..\USER\inc;..\USER\src;..\CODE) DEBUG PRINT(.\Out_File\zf_gpio.lst) OBJECT(.\Out_File\zf_gpio.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2020,Öð·É¿Æ¼¼
    4           * All rights reserved.
    5           * ¼¼ÊõÌÖÂÛQQÈº£ºÒ»Èº£º179029047(ÒÑÂú)  ¶þÈº£º244861897(ÒÑÂú)  ÈýÈº£º824575535
    6           *
    7           * ÒÔÏÂËùÓÐÄÚÈÝ°æÈ¨¾ùÊôÖð·É¿Æ¼¼ËùÓÐ£¬Î´¾­ÔÊÐí²»µÃÓÃÓÚÉÌÒµÓÃÍ¾£¬
    8           * »¶Ó­¸÷Î»Ê¹ÓÃ²¢´«²¥±¾³ÌÐò£¬ÐÞ¸ÄÄÚÈÝÊ±±ØÐë±£ÁôÖð·É¿Æ¼¼µÄ°æÈ¨ÉùÃ÷¡£
    9           *
   10           * @file                gpio
   11           * @company                     ³É¶¼Öð·É¿Æ¼¼ÓÐÏÞ¹«Ë¾
   12           * @author              Öð·É¿Æ¼¼(QQ790875685)
   13           * @version             ²é¿´docÄÚversionÎÄ¼þ °æ±¾ËµÃ÷
   14           * @Software            MDK FOR C251 V5.60
   15           * @Target core         STC32G12K128
   16           * @Taobao              https://seekfree.taobao.com/
   17           * @date                2020-4-14
   18           ********************************************************************************************************
             -************/
   19          
   20          
   21          #include "zf_gpio.h"
   22          
   23          
   24          #define PxPU_BASE_ADDR  0x7EFE10 
   25          
   26          //-------------------------------------------------------------------------------------------------------
             -------------
   27          //  @brief      GPIOÉèÖÃÒý½ÅÉÏÀ­µç×èÉèÖÃ
   28          //  @param      pin         Ñ¡ÔñÒý½Å£¨P0_0-P7_7£©
   29          //  @param      pull        ÉèÖÃÉÏÏÂÀ­µç×è NOPULL:²»ÉèÖÃ PULLUP:ÉÏÀ­
   30          //  @return     void
   31          //  Sample usage:           gpio_pull_set(P0_0,NOPULL);       // ÉèÖÃP0.0Òý½ÅÃ»ÓÐÉÏÏÂÀ­µç×è
   32          //-------------------------------------------------------------------------------------------------------
             -------------
   33          void gpio_pull_set(PIN_enum pin, PULL_enum pull)
   34          {
   35   1              if(PULLUP == pull)
   36   1              {
   37   2                      (*(unsigned char volatile far *)(PxPU_BASE_ADDR + (pin >> 4))) |= (1<<(pin&0x0F));
   38   2              }
   39   1              else if(NOPULL == pull)
   40   1              {
   41   2                      (*(unsigned char volatile far *)(PxPU_BASE_ADDR + (pin >> 4))) &= ~(1<<(pin&0x0F));
   42   2              }
   43   1      }
   44          
   45          
   46          
   47          //-------------------------------------------------------------------------------------------------------
             -------------
   48          //  @brief      GPIOÉèÖÃÒý½ÅÄ£Ê½
   49          //  @param      pin         Ñ¡ÔñÒý½Å£¨P0_0-P5_4£©
   50          //  @param      mode        Òý½ÅÄ£Ê½ GPIO:×¼Ë«Ïò¿Ú, GPO_PP:ÍÆÍìÊä³ö, GPI_IMPEDANCE:¸ß×èÊäÈë, GPI_OD:¿ªÂ©Ê
             -ä³ö
   51          //  @return     void
C251 COMPILER V5.60.0,  zf_gpio                                                            15/07/23  15:59:05  PAGE 2   

   52          //  Sample usage:           gpio_mode(P0_0,GPIO);       // ÉèÖÃP0.0ÉèÖÃÎªË«ÏòIO
   53          //-------------------------------------------------------------------------------------------------------
             -------------
   54          void gpio_mode(PIN_enum pin, GPIOMODE_enum mode)
   55          {
   56   1              if(GPIO == mode)
   57   1              {
   58   2                      if(0x00 == (pin&0xF0))  //P0
   59   2                      {
   60   3                              P0M1 &= ~(1<<(pin&0xF));
   61   3                              P0M0 &= ~(1<<(pin&0xF));
   62   3                      }
   63   2                      if(0x10 == (pin&0xF0))  //P1
   64   2                      {
   65   3                              P1M1 &= ~(1<<(pin&0xF));
   66   3                              P1M0 &= ~(1<<(pin&0xF));
   67   3                      }
   68   2                      if(0x20 == (pin&0xF0))  //P2
   69   2                      {
   70   3                              P2M1 &= ~(1<<(pin&0xF));
   71   3                              P2M0 &= ~(1<<(pin&0xF));
   72   3                      }
   73   2                      
   74   2                      if(0x30 == (pin&0xF0))  //P3
   75   2                      {
   76   3                              P3M1 &= ~(1<<(pin&0xF));
   77   3                              P3M0 &= ~(1<<(pin&0xF));
   78   3                      }
   79   2                      if(0x40 == (pin&0xF0))  //P4
   80   2                      {
   81   3                              P4M1 &= ~(1<<(pin&0xF));
   82   3                              P4M0 &= ~(1<<(pin&0xF));
   83   3                      }
   84   2                      if(0x50 == (pin&0xF0))  //P5
   85   2                      {
   86   3                              P5M1 &= ~(1<<(pin&0xF));
   87   3                              P5M0 &= ~(1<<(pin&0xF));
   88   3                      }
   89   2                      if(0x60 == (pin&0xF0))  //P5
   90   2                      {
   91   3                              P6M1 &= ~(1<<(pin&0xF));
   92   3                              P6M0 &= ~(1<<(pin&0xF));
   93   3                      }
   94   2                      if(0x70 == (pin&0xF0))  //P5
   95   2                      {
   96   3                              P7M1 &= ~(1<<(pin&0xF));
   97   3                              P7M0 &= ~(1<<(pin&0xF));
   98   3                      }
   99   2              }
  100   1              else if(GPO_PP == mode)
  101   1              {
  102   2                      if(0x00 == (pin&0xF0))  //P0
  103   2                      {
  104   3                              P0M1 &= ~(1<<(pin&0xF));
  105   3                              P0M0 |=  (1<<(pin&0xF));
  106   3                      }
  107   2                      if(0x10 == (pin&0xF0))  //P1
  108   2                      {
  109   3                              P1M1 &= ~(1<<(pin&0xF));
  110   3                              P1M0 |=  (1<<(pin&0xF));
  111   3                      }
  112   2                      if(0x20 == (pin&0xF0))  //P2
  113   2                      {
  114   3                              P2M1 &= ~(1<<(pin&0xF));
  115   3                              P2M0 |=  (1<<(pin&0xF));
  116   3                      }
C251 COMPILER V5.60.0,  zf_gpio                                                            15/07/23  15:59:05  PAGE 3   

  117   2                      
  118   2                      if(0x30 == (pin&0xF0))  //P3
  119   2                      {
  120   3                              P3M1 &= ~(1<<(pin&0xF));
  121   3                              P3M0 |=  (1<<(pin&0xF));
  122   3                      }
  123   2                      if(0x40 == (pin&0xF0))  //P4
  124   2                      {
  125   3                              P4M1 &= ~(1<<(pin&0xF));
  126   3                              P4M0 |=  (1<<(pin&0xF));
  127   3                      }
  128   2                      if(0x50 == (pin&0xF0))  //P5
  129   2                      {
  130   3                              P5M1 &= ~(1<<(pin&0xF));
  131   3                              P5M0 |=  (1<<(pin&0xF));
  132   3                      }
  133   2                      if(0x60 == (pin&0xF0))  //P4
  134   2                      {
  135   3                              P6M1 &= ~(1<<(pin&0xF));
  136   3                              P6M0 |=  (1<<(pin&0xF));
  137   3                      }
  138   2                      if(0x70 == (pin&0xF0))  //P5
  139   2                      {
  140   3                              P7M1 &= ~(1<<(pin&0xF));
  141   3                              P7M0 |=  (1<<(pin&0xF));
  142   3                      }
  143   2                      
  144   2              }
  145   1              else if(GPI_IMPEDANCE == mode)
  146   1              {
  147   2                      if(0x00 == (pin&0xF0))  //P0
  148   2                      {
  149   3                              P0M1 |=  (1<<(pin&0xF));
  150   3                              P0M0 &= ~(1<<(pin&0xF));
  151   3                      }
  152   2                      if(0x10 == (pin&0xF0))  //P1
  153   2                      {
  154   3                              P1M1 |=  (1<<(pin&0xF));
  155   3                              P1M0 &= ~(1<<(pin&0xF));
  156   3                      }
  157   2                      if(0x20 == (pin&0xF0))  //P2
  158   2                      {
  159   3                              P2M1 |=  (1<<(pin&0xF));
  160   3                              P2M0 &= ~(1<<(pin&0xF));
  161   3                      }
  162   2                      
  163   2                      if(0x30 == (pin&0xF0))  //P3
  164   2                      {
  165   3                              P3M1 |=  (1<<(pin&0xF));
  166   3                              P3M0 &= ~(1<<(pin&0xF));
  167   3                      }
  168   2                      if(0x40 == (pin&0xF0))  //P4
  169   2                      {
  170   3                              P4M1 |=  (1<<(pin&0xF));
  171   3                              P4M0 &= ~(1<<(pin&0xF));
  172   3                      }
  173   2                      if(0x50 == (pin&0xF0))  //P5
  174   2                      {
  175   3                              P5M1 |=  (1<<(pin&0xF));
  176   3                              P5M0 &= ~(1<<(pin&0xF));
  177   3                      }
  178   2                      if(0x60 == (pin&0xF0))  //P5
  179   2                      {
  180   3                              P6M1 |=  (1<<(pin&0xF));
  181   3                              P6M0 &= ~(1<<(pin&0xF));
  182   3                      }
C251 COMPILER V5.60.0,  zf_gpio                                                            15/07/23  15:59:05  PAGE 4   

  183   2                      if(0x70 == (pin&0xF0))  //P5
  184   2                      {
  185   3                              P7M1 |=  (1<<(pin&0xF));
  186   3                              P7M0 &= ~(1<<(pin&0xF));
  187   3                      }
  188   2              }
  189   1              else if(GPI_OD == mode)
  190   1              {
  191   2                      if(0x00 == (pin&0xF0))  //P0
  192   2                      {
  193   3                              P0M1 |= (1<<(pin&0xF));
  194   3                              P0M0 |= (1<<(pin&0xF));
  195   3                      }
  196   2                      if(0x10 == (pin&0xF0))  //P1
  197   2                      {
  198   3                              P1M1 |= (1<<(pin&0xF));
  199   3                              P1M0 |= (1<<(pin&0xF));
  200   3                      }
  201   2                      if(0x20 == (pin&0xF0))  //P2
  202   2                      {
  203   3                              P2M1 |= (1<<(pin&0xF));
  204   3                              P2M0 |= (1<<(pin&0xF));
  205   3                      }
  206   2                      
  207   2                      if(0x30 == (pin&0xF0))  //P3
  208   2                      {
  209   3                              P3M1 |= (1<<(pin&0xF));
  210   3                              P3M0 |= (1<<(pin&0xF));
  211   3                      }
  212   2                      if(0x40 == (pin&0xF0))  //P4
  213   2                      {
  214   3                              P4M1 |= (1<<(pin&0xF));
  215   3                              P4M0 |= (1<<(pin&0xF));
  216   3                      }
  217   2                      if(0x50 == (pin&0xF0))  //P5
  218   2                      {
  219   3                              P5M1 |= (1<<(pin&0xF));
  220   3                              P5M0 |= (1<<(pin&0xF));
  221   3                      }
  222   2                      if(0x60 == (pin&0xF0))  //P5
  223   2                      {
  224   3                              P6M1 |= (1<<(pin&0xF));
  225   3                              P6M0 |= (1<<(pin&0xF));
  226   3                      }
  227   2                      if(0x70 == (pin&0xF0))  //P5
  228   2                      {
  229   3                              P7M1 |= (1<<(pin&0xF));
  230   3                              P7M0 |= (1<<(pin&0xF));
  231   3                      }
  232   2              }
  233   1      }
  234          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      2466     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         8     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
C251 COMPILER V5.60.0,  zf_gpio                                                            15/07/23  15:59:05  PAGE 5   

  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
